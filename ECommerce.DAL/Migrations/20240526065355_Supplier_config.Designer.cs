// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240526065355_Supplier_config")]
    partial class Supplier_config
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedData")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Category 1",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 975, DateTimeKind.Local).AddTicks(1672),
                            CreatedIpAddress = "111.21.2.5",
                            Description = "Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("64033abd-3295-41d0-b40e-bfb346b4b3cb"),
                            Status = 0,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Category 2",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 975, DateTimeKind.Local).AddTicks(1780),
                            CreatedIpAddress = "111.21.2.5",
                            Description = "Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("da8dfb9e-fa8d-4a34-a7a8-f3d9ea0fdbc1"),
                            Status = 0,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Category 3",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 975, DateTimeKind.Local).AddTicks(1784),
                            CreatedIpAddress = "111.21.2.5",
                            Description = "Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("c3d0a5ae-8726-4309-8d77-4ae3142c3f5e"),
                            Status = 0,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedData")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 11,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4313),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("6ef15449-0404-4b98-b87e-e3420cc1d4d8"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 5548.88m,
                            UnitsInStock = (short)7,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4615),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("c7283868-bf3a-4dad-8693-1c629be42d17"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 7612.26m,
                            UnitsInStock = (short)40,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4629),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("a3301cbc-95c1-46db-b827-3a4b01601653"),
                            ProductName = "Towels",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 1903.13m,
                            UnitsInStock = (short)95,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4641),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("bc73ba1e-8184-46f0-9585-46efb6dbb339"),
                            ProductName = "Shirt",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 4724.01m,
                            UnitsInStock = (short)10,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4653),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("e5eb319d-3352-454e-a300-603cc303d10d"),
                            ProductName = "Shoes",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 2427.38m,
                            UnitsInStock = (short)68,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4663),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("3e37e602-08e8-4620-b295-4ffc2136e20e"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 6682.05m,
                            UnitsInStock = (short)73,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4686),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("184b3714-b310-4926-a1fe-46b7ae6c7e44"),
                            ProductName = "Fish",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 9035.96m,
                            UnitsInStock = (short)81,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4696),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("4c6e8f9a-7e95-40d0-9187-89e4eab0373d"),
                            ProductName = "Chicken",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 4157.17m,
                            UnitsInStock = (short)96,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4705),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("b30ea7f5-fcc9-42fb-921e-bddff619aaba"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 200.80m,
                            UnitsInStock = (short)10,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4720),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("febb4526-be00-43a4-9515-3e64d1f95659"),
                            ProductName = "Gloves",
                            Status = 0,
                            SupplierId = 1,
                            UnitPrice = 7037.81m,
                            UnitsInStock = (short)63,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 21,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4730),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("859ac669-7710-4a4e-8f7c-f6d365d761c4"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 4033.00m,
                            UnitsInStock = (short)97,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 22,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4740),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("70c346a2-2302-4d64-ba66-d39d0b400ea0"),
                            ProductName = "Soap",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 1029.23m,
                            UnitsInStock = (short)18,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 23,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4749),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("7e128390-0bae-4191-a556-1220dadc4082"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 7536.03m,
                            UnitsInStock = (short)85,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 24,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4760),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("92f57d3f-4d6d-4f01-9d42-35a91c800820"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 3084.72m,
                            UnitsInStock = (short)84,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 25,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4772),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("1cdf3756-985a-49ed-a692-5b5648105d6d"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 4492.03m,
                            UnitsInStock = (short)69,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 26,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4782),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("17f02c78-5f4f-493b-a5c2-794a3b852063"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 634.96m,
                            UnitsInStock = (short)19,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 27,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4791),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("7188a869-fdbb-4157-94fd-39b45641699e"),
                            ProductName = "Ball",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 965.52m,
                            UnitsInStock = (short)93,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 28,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4801),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("c767589d-346e-46dd-a968-cefdbb3bd036"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 895.73m,
                            UnitsInStock = (short)52,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 29,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4811),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("47e040f7-3709-482d-b2e2-eab3a37cb976"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 4966.33m,
                            UnitsInStock = (short)99,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 30,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4820),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("136d0aba-bd7c-4ab8-ad7b-bd738ac2847f"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 2,
                            UnitPrice = 2739.76m,
                            UnitsInStock = (short)28,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 31,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4829),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("17268685-4666-479a-a545-1b25bb61851a"),
                            ProductName = "Computer",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 1117.78m,
                            UnitsInStock = (short)85,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 32,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4840),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("67f8bfd7-4537-4fab-a271-902befd0dcfe"),
                            ProductName = "Mouse",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 6267.57m,
                            UnitsInStock = (short)17,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 33,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4852),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("f5fbc2e8-8538-4748-90c6-9bf0b4975009"),
                            ProductName = "Salad",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 699.77m,
                            UnitsInStock = (short)21,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 34,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4866),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("d91a38a1-6c6c-4f9f-9b52-8aebe1680117"),
                            ProductName = "Chips",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 3026.80m,
                            UnitsInStock = (short)92,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 35,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4875),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("b7141f23-ed60-4e9b-8387-361fd144d0a8"),
                            ProductName = "Keyboard",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 3908.80m,
                            UnitsInStock = (short)8,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 36,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4884),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("3976cfc9-c480-43fb-8238-0c7f7fe1e91f"),
                            ProductName = "Sausages",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 3955.16m,
                            UnitsInStock = (short)7,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 37,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4894),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("57f75d4d-0142-4ef8-9d0f-b835b2ed6ff0"),
                            ProductName = "Bike",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 2523.89m,
                            UnitsInStock = (short)16,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 38,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4903),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("9ca3afa4-7d8c-4ac0-a80b-dbe616fa9652"),
                            ProductName = "Pizza",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 6641.64m,
                            UnitsInStock = (short)31,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 39,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4912),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("49cf9e11-b8d3-44a0-a995-ada5ae2c92cc"),
                            ProductName = "Cheese",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 9579.33m,
                            UnitsInStock = (short)67,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 40,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(4922),
                            CreatedIpAddress = "111.21.2.5",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("a33a4720-952e-4db9-a924-30b080e3613f"),
                            ProductName = "Chair",
                            Status = 0,
                            SupplierId = 3,
                            UnitPrice = 8368.69m,
                            UnitsInStock = (short)42,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedData")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress-1",
                            CompanyName = "Test Supplier-1",
                            ContactName = "Test ContactName-11",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(5990),
                            CreatedIpAddress = "111.21.2.5",
                            IsActive = true,
                            MasterId = new Guid("8a0df7c9-373c-4295-a517-2045275f4c92"),
                            Status = 0,
                            SupplierId = 0,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress-2",
                            CompanyName = "Test Supplier-2",
                            ContactName = "Test ContactName-2",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(6000),
                            CreatedIpAddress = "111.21.2.5",
                            IsActive = true,
                            MasterId = new Guid("d1b8f2b5-d3fa-40e9-9bca-f2adf9fcfcb7"),
                            Status = 0,
                            SupplierId = 0,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Address = "Test Supplier Adress-3",
                            CompanyName = "Test Supplier-3",
                            ContactName = "Test ContactName-3",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 5, 26, 9, 53, 54, 983, DateTimeKind.Local).AddTicks(6003),
                            CreatedIpAddress = "111.21.2.5",
                            IsActive = true,
                            MasterId = new Guid("fc043e24-cd97-4700-af15-d8f57be250d2"),
                            Status = 0,
                            SupplierId = 0,
                            UpdatedData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Model.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
